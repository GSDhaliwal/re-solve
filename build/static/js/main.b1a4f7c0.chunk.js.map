{"version":3,"sources":["components/Gameroom/RankingListItem.jsx","components/Gameroom/UserContext.js","components/Gameroom/RankingList.jsx","components/Gameroom/Answer.jsx","components/Gameroom/Question.jsx","components/Gameroom/Reveal.jsx","components/Gameroom/Gameroom.jsx","components/Login/Signup.jsx","components/Login/index.jsx","components/createContext.js","components/host_games_list/Game.jsx","components/host_games_list/GamesList.jsx","components/player_lobby/PlayerLobbyList.jsx","components/player_lobby/PlayerLobby.jsx","components/Create/Answers.jsx","components/Create/Questions.jsx","components/Create/Create.jsx","components/Edit/Answer.jsx","components/Edit/Question.jsx","components/Edit/Edit.jsx","components/JoinLobby.jsx","components/join_games_list/Join.jsx","components/ManageAccount/UserQuizzes.jsx","components/ManageAccount/ManageAccount.jsx","components/Error/ErrorLogIn.jsx","components/Create/createdContext.js","components/Profile/Profile.jsx","components/landing_page/LandingPage.jsx","App.js","serviceWorker.js","index.js"],"names":["RankingListItem","props","gamertag","score","createContext","RankingList","useContext","UserContext","items","players","sort","a","b","map","player","index","key","id","level","expertise_level","Answer","context","btnRef","useRef","className","ref","onClick","event","setAnswered","setWhichAns","current","setAttribute","correct","sendAns","gamerTag","content","Question","useEffect","answers","answer","whichAns","answered","correct_answer","question","image","length","src","Reveal","Gameroom","useState","view","setView","count","setcount","setTimerInterval","timer","setTimer","history","useHistory","user","delay","Object","keys","questions","setTimeout","Math","floor","points_per_question","time_per_question","OT","clearInterval","setInterval","t","setJoinView","setLobbyFlag","push","setStart","Signup","newName","setNewName","newPass","setNewPass","type","placeholder","onChange","target","value","register","Login","username","name","setUsername","setPassword","verifyLogin","password","useStyles","makeStyles","root","width","margin","bullet","display","transform","title","fontSize","pos","marginBottom","button","justifyContent","Game","classes","Button","variant","createGame","console","log","Card","CardContent","Typography","component","color","gutterBottom","category","num_of_questions","num_of_times_hosted","total_players_played","difficulty","GamesList","order","setOrder","quizlist","page","setPage","selectRef","setIsHost","sorted","Number","quizzes","category_id","reSort","quiz","user_id","player_gamertag","quiz_name","category_name","PlayerLobbyList","hostPlayer","Lobby","playersData","host","is_host","displayCode","isHost","startGame","Answers","newSelf","updatePartialAnswer","Boolean","checked","updatePartialAnswerBoolean","Questions","updatePartialQuestion","partName","FormControl","FormLabel","RadioGroup","aria-label","toString","updatePartialQuestionPoints","FormControlLabel","control","Radio","label","onDelete","categories","Create","stateCategory","setStateCategory","setDifficulty","gameTitle","setGameTitle","setCount","setQuestions","temp","deleteQuestion","newQuestion","clonedQuestions","updateQuestion","handleClick","class","createQuiz","parseInt","existingAnswers","defaultAnswer","forEach","mergeDefaultAnswers","for","Edit","QA","editQuiz","setClicked","loadProfilePage","JoinLobby","val","setVal","enterRoom","currentgame","cancelGame","cancelCodeInput","setGameCode","joinButton","gameCode","bar","quizName","numOfQ","numOfTimesHosted","totalPlayersPlayed","ManageAccount","userQuizzes","ErrorLogIn","Profile","theme","spacing","LandingPage","to","ul","padding","listStyle","appBar","borderBottom","palette","divider","toolbar","flexWrap","toolbarTitle","flexGrow","heroContent","footer","borderTop","marginTop","paddingTop","paddingBottom","breakpoints","up","navPosition","position","App","socket","lplayers","setLplayers","setUser","setGamerTag","start","setPlayers","gameDis","setGameDis","setQuizlist","initilizedQuiz","setInitializedQuiz","setCurrentgame","joinView","lobbyFlag","loadManageAccount","setLoadManageAccount","setDisplayCode","setQuiz","setTitle","clicked","setUserQuizzes","refresh","setRefresh","emit","on","data","quizid","once","QAndAs","res","ranking","flag","p","game","x","gamer","logged","alert","logout","u","gamecodeGen","result","alph","i","charAt","random","quiz_id","gamecode","is_active","current_game","displayName","gameid","game_id","qa","message","style","textDecoration","managingAccount","path","Provider","numOfQuestions","oldQuizId","clickfunc","exact","gameC","gamid","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","io","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b1a4f7c0.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function RankingListItem(props){\n  return(\n    <li>\n      {props.gamertag}\n      {\" - \"}\n      {props.score}\n    </li>\n  )\n}","import {createContext} from 'react';\n\nexport default createContext();","import React, {useContext} from \"react\";\nimport RankingListItem from \"./RankingListItem\"\nimport UserContext from \"./UserContext\"\n\nexport default function RankingList(props){\n\n  const context = useContext(UserContext);\n\n  let sorted = props.players.sort((a, b)=>{\n    return b.score - a.score;\n  })\n  \n  let items = sorted.map((player, index)=>{\n    return <RankingListItem \n    key={player.id}\n    gamertag={player.gamertag}\n    score={player.score}\n    level={player.expertise_level}\n    />\n  })\n  return(\n    <ol>\n      {items}\n    </ol>\n    \n  )\n}","import React, {useRef, useContext} from 'react';\nimport UserContext from './UserContext';\nimport \"./Answer.css\"\n\nexport default function Answer(props){\n  const context = useContext(UserContext);\n  let btnRef = useRef();\n\n  return (<button className=\"Answer\"ref={btnRef} onClick={((event)=>{\n    context.setAnswered(true);\n    context.setWhichAns(props.index);\n    if(btnRef.current){\n      btnRef.current.setAttribute(\"disabled\", \"disabled\");\n    }\n    if(props.correct){\n      context.sendAns(context.gamerTag, props.score);\n    }\n  })}>\n      {props.content}\n    </button>)\n}","import React, { useEffect, useContext } from 'react';\nimport Answer from \"./Answer\";\nimport UserContext from './UserContext';\nimport \"./Question.css\"\n\nexport default function Question(props){\n  const context = useContext(UserContext);\n  useEffect(()=>{\n    context.setAnswered(false);\n  },[]);\n\n  let answers = props.answers.map((answer, index)=>{\n    return (context.whichAns !== index && context.answered === true) ? \"\": (<Answer \n      key = {index}\n      index = {index}\n      content = {answer.answer}\n      correct = {answer.correct_answer}\n      score = {props.score}\n    />)\n  })\n  return (\n    <section className=\"Question\">\n      <h6 className=\"qTitle\">\n        {props.question.question}\n      </h6>\n      <div>\n      {(props.question.image.length > 0) ? <img className=\"qimage\"src={props.question.image}/> : \"\"}\n      </div>\n      <div className=\"Answers\">\n        {answers}\n      </div>\n    </section>\n  )\n}","import React from 'react';\nimport \"./Reveal.css\"\n\nexport default function Reveal (props){\n  let correct;\n  for(let answer of props.answers){\n    if(answer.correct_answer){\n      correct = answer.answer;\n    }\n  }\n  return (<div>\n    <h6 className=\"CAT\">\n      Correct answer\n    </h6>\n    <p className=\"CA\">\n      {correct}\n    </p>\n  </div>)\n}","import React,{useState, useEffect, useContext} from \"react\";\nimport RankingList from \"./RankingList\";\nimport Questions from \"./Question\"\nimport UserContext from \"./UserContext\"\nimport Reveal from \"./Reveal\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory\n} from \"react-router-dom\";\nimport \"./Gameroom.css\";\n\n\nexport default function Gameroom(props){\n  const [view, setView] = useState();\n  const [count, setcount] = useState(0);\n  const [timerInterval, setTimerInterval] = useState(null);\n  const [timer, setTimer] = useState(0);\n  const context = useContext(UserContext);\n  \n\n  const history = useHistory();\n  function backbutton() {\n    history.push(\"/\");\n  }\n  \n  useEffect(()=>{\n    },[context.user]);\n    useEffect(()=>{\n      let delay = 0;\n      if(count < Object.keys(props.questions).length*3){\n        if(count%3 === 2){\n          delay = 15000;\n          setTimeout(() => {\n            setView(<RankingList\n              key={props.questions[Math.floor(count/3)].id}\n              players={props.players}\n              user={context.user}\n            />)\n            setcount(count+1);\n          }, delay);\n        }\n        if(count%3 === 0){\n          delay = 3000;\n          setTimeout(() => {\n            setView(<Questions\n              key={props.questions[Math.floor(count/3)].id}\n              question={props.questions[ Math.floor(count/3)]}\n              answers={props.questions[ Math.floor(count/3)].answers}\n              image={props.questions[Math.floor(count/3)].image}\n              user={context.user}\n              score={props.questions[Math.floor(count/3)].points_per_question}\n              />);\n              setTimer(props.questions[ Math.floor(count/3)].time_per_question)\n              setTimerInterval((OT)=>{\n                if(OT){\n                  clearInterval(OT);\n                }\n                return setInterval(() => {\n                  setTimer((t)=>t-1);\n                }, 1000);;\n              })\n              setcount(count+1);\n          }, delay);\n        }\n        if(count % 3 === 1){\n          delay = props.questions[ Math.floor(count/3)].time_per_question*1000;\n          setTimeout(() => {\n            setView(<Reveal\n              answers={props.questions[Math.floor(count/3)].answers}\n            />);\n              setTimerInterval((OT)=>{\n                clearInterval(OT);\n                return null;\n              })\n              setcount(count+1);\n          }, delay);\n        }\n      }\n  },[count, ]);\n\n\n  return(\n    <section className=\"Gameroom\">\n      {(count%3 === 1) ? \n      <span className=\"timer\">\n      {timer}\n      </span> : \"\"}\n    \n    <span className=\"gamertag\">\n      {context.gamerTag}\n    </span>\n  \n  {view}\n\n  {(count >= Object.keys(props.questions).length*3) ? <button onClick={()=>{\n    setView(null);\n    context.setJoinView(false);\n    context.setLobbyFlag(false);\n    backbutton();\n    context.setStart(0);\n  }}>\n    Back to Home\n  </button>: \"\"}\n    </section>\n  )\n}","import React, { useContext, useState } from \"react\";\nimport UserContext from \"../Gameroom/UserContext\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory\n} from \"react-router-dom\";\n\n\nexport default function Signup(props){\n  const[newName, setNewName] = useState();\n  const[newPass, setNewPass] = useState();\n  const context = useContext(UserContext);\n\n  const newUser = (event)=>{\n    setNewName(event.target.value);\n  }\n  const newPassword =(event)=>{\n    setNewPass(event.target.value);\n  }\n\n  //back button functionality\n  let history = useHistory();\n  function handleClick() {\n    history.push(\"/\");\n  }\n\n\n  return <div>\n    <form>\n      <input type=\"text\" placeholder=\"New username\"onChange={newUser}/>\n      <input type=\"text\" placeholder=\"New password\"onChange={newPassword}/>\n      <button type = \"button\" onClick={()=>{\n        context.register(newName, newPass)\n        handleClick()\n      }}>\n        Signup\n      </button>\n    </form>\n  </div>\n}","import React, { useContext, useState, useEffect } from 'react';\nimport UserContext from \"../Gameroom/UserContext\"\nimport Signup from \"./Signup\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory\n} from \"react-router-dom\";\n\n\n\nexport default function Login (props){\n\n\n  const context = useContext(UserContext);\n  const updateUsername = (event) =>{\n    context.setUsername(event.target.value);\n  }\n  const updatePassword = (event) =>{\n    context.setPassword(event.target.value);\n  }\n\n  //back button functionality\n  let history = useHistory();\n  function handleClick() {\n    history.push(\"/\");\n  }\n\n\n  return(\n    <section>\n\n    { !context.user ? (\n    <div>\n    <form>\n      <input \n        type=\"text\" name=\"username\" placeholder=\"username\" onChange={updateUsername}\n      />\n      <input \n        type=\"text\" name=\"password\" placeholder=\"password\" onChange={updatePassword}\n      />\n      <button type=\"button\" onClick={()=>{\n        context.verifyLogin(context.username, context.password)\n        handleClick()}}>\n        Login\n      </button>\n      </form>\n      <br/>\n      <Signup/>\n      </div>)\n      : \n       (<div>\n      <h4>Hello, {context.user.username}! You are signed in!</h4>\n      </div>)\n      }\n        \n      \n\n    </section>\n  )\n  \n}","import React, {createContext} from 'react';\n\nexport default createContext();","import React, { useContext } from 'react';\nimport createContext from \"../createContext\";\nimport \"./gameslist.css\";\n\n//Material-UI\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 'inheret',\n    length: 'inheret',\n    margin: 'inheret'\n    // height: '300px',\n    // border: '10px',\n    // margin: '10px',\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  button: {\n    justifyContent: \"center\",\n  }\n});\n\n\n\nexport default function Game(props) {\n\n  const context = useContext(createContext);\n  const classes = useStyles();\n\n  return  (\n              <Button variant=\"contained\" type=\"button\" className=\"button-card\"\n                  onClick={()=>{context.createGame(props.id)\n                  console.log(props.id);}}>\n              <Card className={classes.root} variant=\"outlined\">\n\n              <CardContent className=\"content-card\">\n                <Typography variant=\"h5\" component=\"h2\">{props.name}</Typography>\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>Category: {props.category}</Typography>\n                <Typography className={classes.pos} color=\"textSecondary\">Number of Questions: {props.num_of_questions}</Typography>\n                <Typography className={classes.pos} color=\"textSecondary\">Number of Times Hosted: {props.num_of_times_hosted}</Typography>\n                <Typography className={classes.pos} color=\"textSecondary\">Total Players Played: {props.total_players_played}</Typography>\n                <Typography className={classes.pos} color=\"textSecondary\">Difficulty: {props.difficulty}</Typography>\n                \n          \n              </CardContent>\n\n              </Card>\n              </Button>)\n};","import React, { useEffect, useContext, useState, useRef} from 'react';\nimport Game from './Game';\nimport createContext from '../createContext';\nimport './gameslist.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory\n} from \"react-router-dom\";\n\n\nexport default function GamesList(props) {\n  const [order, setOrder] = useState(1);\n  const context = useContext(createContext);\n  const [page, setPage] = useState(context.quizlist);\n\n  let selectRef = useRef();\n  useEffect(()=>{\n    context.setIsHost(true);\n  },[]);\n\n\n  //back button functionality\n  let history = useHistory();\n  function handleClick() {\n    history.push(\"/\");\n  }\n\n\n  // let quizData;\n  let sorted = context.quizlist;\n  \n\n  const reSort = (quizzes, order)=>{\n    if(order === 1){\n      sorted = quizzes.sort((a, b)=>{\n        if(b.category_id > a.category_id){\n          return -1;\n        }\n        if(b.category_id < a.category_id){\n          return 1;\n        }\n        if(b.category_id === a.category_id){\n          return 0;\n        }\n      })\n    }\n    if(order === 2){\n      sorted = quizzes.sort((a, b)=>{\n        if(b.difficulty > a.difficulty){\n          return -1;\n        }\n        if(b.difficulty < a.difficulty){\n          return 1;\n        }\n        if(b.difficulty === a.difficulty){\n          return 0;\n        }\n      })\n    }\n    if(order === 3){\n      sorted = quizzes.sort((a, b)=>{\n        if(a.total_players_played > b.total_players_played){\n          return -1;\n        }\n        if(a.total_players_played < b.total_players_played){\n          return 1;\n        }\n        if(a.total_players_played === b.total_players_played){\n          return 0;\n        }\n      })\n    }\n      if(order === 4){\n        sorted = quizzes.sort((a, b)=>{\n          if(a.num_of_times_hosted > b.num_of_times_hosted){\n            return -1;\n          }\n          if(a.num_of_times_hosted < b.num_of_times_hosted){\n            return 1;\n          }\n          if(a.num_of_times_hosted === b.num_of_times_hosted){\n            return 0;\n          }\n        })\n      } \n      if(order === 5){\n        sorted = quizzes.sort((a, b)=>{\n          if(b.num_of_questions > a.num_of_questions){\n            return -1;\n          }\n          if(b.num_of_questions < a.num_of_questions){\n            return 1;\n          }\n          if(b.num_of_questions === a.num_of_questions){\n            return 0;\n          }\n      })\n    }\n    if(order === 6){\n      sorted = quizzes.sort((a, b)=>{\n        if(a.num_of_questions > b.num_of_questions){\n          return -1;\n        }\n        if(a.num_of_questions < b.num_of_questions){\n          return 1;\n        }\n        if(a.num_of_questions === b.num_of_questions){\n          return 0;\n        }\n    })\n  }\n    setPage(sorted);\n  }\n  const handleSort= (event) => {\n    selectRef.current = Number(event.target.value);\n    setOrder(Number(event.target.value));\n    reSort(context.quizlist, selectRef.current);\n  }\n  const display = (page)=>{\n    return page.map((quiz, index) => {\n      return <Game\n                key={quiz.id}\n                id={quiz.id}\n                user={quiz.user_id}\n                gamertag = {quiz.player_gamertag}\n                name={quiz.quiz_name}\n                num_of_questions={quiz.num_of_questions}\n                difficulty={quiz.difficulty}\n                num_of_times_hosted={quiz.num_of_times_hosted}\n                total_players_played={quiz.total_players_played}\n                category={quiz.category_name}\n              />\n    })\n  }\n\n\n  return (\n    // <section>\n      <div className=\"gamesList\">\n        <button className=\"backButton\" type='button' onClick={handleClick}>\n        </button>\n      \n        <h4 className=\"host-title\">host page</h4>\n        <span className=\"sorting\">\n         sort by:\n        <select  className=\"sortSelect\"ref={selectRef} value={order} onChange={handleSort}>\n        <option value={1}>Category</option>\n        <option value={2}>Difficulty</option>\n        <option value={3}>Total Players Played</option>\n        <option value={4}>Most Played</option>\n        <option value={5}>Least Questions</option>\n        <option value={6}>Most Questions</option>\n        </select>\n        </span>\n        <div className=\"card\">\n        {display(page)}\n        </div>\n      </div>\n    // </section>\n  );\n}","import React from 'react';\n\nexport default function PlayerLobbyList(props) {\n\n  const hostPlayer = (props) => {\n    return  <div>\n              <h1>{props.gamertag}</h1>\n            </div>\n  };\n\n  return <div>\n      {hostPlayer(props)}\n    </div>;\n}","import React, { useContext, useEffect } from 'react';\nimport PlayerLobbyList from './PlayerLobbyList';\nimport createContext from '../createContext';\n\nexport default function Lobby(props) {\n\n\n    const context = useContext(createContext);\n    const playersData = props.players.map((player, index) => {\n      return <PlayerLobbyList\n                key={player.id}\n                gamertag = {player.gamertag}\n                host = {player.is_host}\n              />\n    })\n\n    useEffect(() => {\n      console.log(\"hi hi\" , context.displayCode);\n    },[context.displayCode]);\n\n  return (\n    <section>\n      <div>\n        <h4>game code: {context.displayCode}</h4>\n      </div>\n      <div>\n        <h4>{playersData}</h4>\n      </div>\n      {context.isHost ? <button onClick={()=>{\n        context.startGame();\n      }}>Start</button> : \"Waiting for host to start game...\"}\n    </section>\n  )\n}\n","import React from 'react';\nimport { Checkbox } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport \"../CreateAndEditCSS/Answers.css\";\nexport default function Answers(props){\n  const { id, question } = props;\n\n  const updatePartialAnswer = function(id, event) {\n    const answers = question.answers;\n    answers[id].answer = event.target.value;\n    const newSelf = {\n      ...question,\n      answers: answers,\n    }\n    props.onChange(newSelf)\n  }\n\n   const updatePartialAnswerBoolean = function(id, event) {\n    const answers = question.answers;\n    answers[id].correct_answer = Boolean(event.target.checked);\n    const newSelf = {\n      ...question,\n      answers: answers,\n    }\n    props.onChange(newSelf)\n  }\n\n  \n  \n  return (\n\n    <div className=\"answers\">\n      <input className=\"answerInput\" type=\"text\" name=\"Answers\" placeholder=\"Check if correct\" id={id} value={question.answers[id].answer} onChange={event => updatePartialAnswer(id, event)} />\n      <input className=\"cbes\" type=\"checkbox\" name=\"Answers\" id={\"checkbox\"+id} value={question.answers[id].correct_answer} onChange={event => updatePartialAnswerBoolean(id, event)} />\n      <br/>\n    </div>\n  )\n\n}","import React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Answers from './Answers';\nimport { FormControl, FormLabel, RadioGroup, FormControlLabel, Radio } from '@material-ui/core';\n\nimport \"../CreateAndEditCSS/Questions.css\";\nexport default function Questions(props) {\n  const { id, index, question } = props;\n\n  const [answers, setAnswers] = useState([1, 1, 1, 1, 1]);\n  \n  \n  let display = answers.map((answer, index) => {\n    if (index < 5) {\n      return <Answers \n        key={index}\n        id={index}\n        question={props.question}\n        onChange={props.onChange}\n      />\n    }\n  })\n\n  //when called, updates question based on property being changed\n  const updatePartialQuestion = function(partName, event) {\n    const newSelf = {\n      ...question,\n      [partName]: event.target.value,\n    }\n    props.onChange(newSelf)\n  }\n\n  const updatePartialQuestionPoints = function(partName, event) {\n    const newSelf = {\n      ...question,\n      [partName]: Number(event.target.value)\n    }\n    props.onChange(newSelf)\n  }\n\n\n  \n  return (\n    <div className=\"questions\">\n        \n        <label>Question</label>\n        <br/>\n        <br/>\n        <textarea className=\"questionTextArea\" type=\"text\" placeholder=\"Type Here...\" name=\"Question\" id={id} value={question.question} onChange={event => updatePartialQuestion('question', event)}/>\n      <div className=\"ImagePointsAndSeconds\">\n        <div className=\"ImageAndSeconds\">\n          <label className=\"URL\" >Image</label>\n          <input className=\"image\" type=\"text\" placeholder=\"URL\"id=\"picture\" name=\"picture\" value={question.image} onChange={event => updatePartialQuestion('image', event)} />\n          <label className=\"seconds\" >Seconds to solve</label>\n          <input className=\"secondsNumber\" type=\"text\" name=\"seconds\" value={question.time_per_question} onChange={event => updatePartialQuestion('time_per_question', event)}/>\n        </div>\n        <div className=\"points\">\n          <FormControl component=\"fieldset\">\n          <FormLabel id=\"title\" component=\"legend\">Points Awarded</FormLabel>\n          <RadioGroup aria-label=\"difficulty\" name=\"difficulty1\" value={(question.points_per_question).toString()} onChange={event => updatePartialQuestionPoints('points_per_question', event)}>\n            <FormControlLabel value=\"125\" control={<Radio />} label=\"125\" />\n            <FormControlLabel value=\"250\" control={<Radio />} label=\"250\" />\n            <FormControlLabel value=\"500\" control={<Radio />} label=\"500\" />\n          </RadioGroup>\n          </FormControl>\n        </div>\n\n      </div>\n      <label>Answers</label>\n        {display}\n      <button type=\"button\" className=\"button-delete\" onClick={ props.onDelete }>Delete Question</button>\n    </div>\n  \n  )\n}","import React, { useState, useEffect, useContext } from 'react';\nimport Questions from './Questions';\nimport \"../back_button.css\";\n\nimport { FormControl, FormLabel, RadioGroup, FormControlLabel, Radio } from '@material-ui/core';\n\nimport \"./Create.css\";\n\nimport createContext from '../createContext';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory\n} from \"react-router-dom\";\n\n\nconst categories = ['Arts', 'General', 'Math', 'Science', 'Software']\n\nexport default function Create(props){\n  \n  const context = useContext(createContext);\n  const [stateCategory, setStateCategory] = useState({value: 'Math'});\n  const [difficulty, setDifficulty] = useState({value: '1'});\n  const [gameTitle, setGameTitle] = useState();\n  const [count,setCount] = useState(1);\n  const [questions, setQuestions] = useState([{\n    id: 0,\n    question: '',\n    image: '',\n    points_per_question: 125,\n    time_per_question: 20,\n    answers: [\n      { answer: '', correct_answer: false},\n      { answer: '', correct_answer: false},\n      { answer: '', correct_answer: false},\n      { answer: '', correct_answer: false},\n      { answer: '', correct_answer: false}\n    ],\n  }]);\n  \n  \n\n\n  const addQuestion = function(id) {\n    setCount(count+1);\n    setQuestions([...questions, {\n      id,\n      question: '',\n      image: '',\n      points_per_question: 125,\n      time_per_question: 20,\n      answers: [\n        { answer: '', correct_answer: false},\n        { answer: '', correct_answer: false},\n        { answer: '', correct_answer: false},\n        { answer: '', correct_answer: false},\n        { answer: '', correct_answer: false}\n      ],\n    }]) \n\n  };\n\n \n  const deleteQuestion = function(index) {\n    let temp=[];\n    let current = 0;\n    questions.map((question)=>{\n      if((current) !== index){\n        temp.push(question);\n      }\n      current++;\n    })\n    setQuestions(temp);\n  };\n\n\n  const updateQuestion = function(index, newQuestion) {\n   let clonedQuestions = [...questions];\n    clonedQuestions[index] = newQuestion;\n    setQuestions(clonedQuestions);\n  };\n  \n  let display = questions.map((question, index) => {\n      return <Questions \n        key={question.id}\n        id={question.id}\n        question={question}\n        index={index}\n        onDelete={() => {\n          deleteQuestion(index)\n        }}\n        onChange={newQuestion => {\n          updateQuestion(index, newQuestion)\n        }}\n      />\n  })\n\n  const handleChangeCategory = (event) => {\n    setStateCategory({value: event.target.value});\n  }\n\n  const handleChangeDifficulty = (event) => {\n    setDifficulty({value: event.target.value});\n  }\n\n  const updateGameTitle = (event)=>{\n    setGameTitle(event.target.value);\n  }\n\n  //back button functionality\n  let history = useHistory();\n  function handleClick() {\n    history.push(\"/\");\n  }\n\n  const doesUserExist = () => {\n    if (context.user) { \n      return context.createQuiz(gameTitle, stateCategory.value, questions, questions.length, parseInt(difficulty.value), context.user.username)\n    } else {\n      return context.createQuiz(gameTitle, stateCategory.value, questions, questions.length, parseInt(difficulty.value))\n    }\n  }\n \n\n  return (\n    <div className=\"createForm\">\n    <form className=\"create\">\n      <div>\n        <button type='button' className=\"backButton\" onClick={handleClick}></button>\n      </div>\n      <div className=\"initialQuizInfo\">\n        <div className=\"QuizTitle\">\n          <label id=\"title\">Quiz Title</label>\n          <textarea className=\"titleTextArea\" name=\"QuizTitle\" placeholder=\"Quiz Title\"onChange={updateGameTitle} />\n          \n        </div>\n        <div class=\"categoryAndDifficulty\">\n          <FormControl component=\"fieldset\">\n            <FormLabel id=\"title\" component=\"legend\">Category</FormLabel>\n            <RadioGroup aria-label=\"category\" name=\"categroy1\" value={stateCategory.value} onChange={handleChangeCategory}>\n            { categories.map(category => {\n              return ( \n                <FormControlLabel value={category} control={<Radio />} key={category} label={category} />\n              )\n            })}\n            </RadioGroup>\n          </FormControl>\n          <FormControl component=\"fieldset\">\n            <FormLabel id=\"title\" component=\"legend\">Difficulty</FormLabel>\n            <RadioGroup aria-label=\"difficulty\" name=\"difficulty1\" value={difficulty.value} onChange={handleChangeDifficulty}>\n              <FormControlLabel value=\"1\" control={<Radio />} label=\"1\" />\n              <FormControlLabel value=\"2\" control={<Radio />} label=\"2\" />\n              <FormControlLabel value=\"3\" control={<Radio />} label=\"3\" />\n              <FormControlLabel value=\"4\" control={<Radio />} label=\"4\" />\n              <FormControlLabel value=\"5\" control={<Radio />} label=\"5\" />\n            </RadioGroup>\n          </FormControl>\n        </div>\n      </div>\n      <div className=\"questionalignment\">\n        {display}\n      </div>\n\n      <button type=\"button\" className=\"button\" onClick={()=>{\n        addQuestion(count)\n        }}>Add Question</button>\n      <button \n      type=\"button\"\n      className=\"button\"\n        onClick={()=>{doesUserExist()\n         handleClick()}}>\n          Save/Post Quiz       \n      </button>\n   </form>\n   </div>\n  )\n}\n\n","import React from 'react';\nimport \"../CreateAndEditCSS/Answers.css\";\nexport default function Answer(props){\n  const { id, question } = props;\n\n  \n  const updatePartialAnswer = function(id, event) {\n    const answers = question.answers;\n    answers[id].answer = event.target.value;\n    const newSelf = {\n      ...question,\n      answers: answers,\n    }\n    props.onChange(newSelf)\n  }\n\n   const updatePartialAnswerBoolean = function(id, event) {\n    const answers = question.answers;\n    answers[id].correct_answer = Boolean(event.target.checked);\n    const newSelf = {\n      ...question,\n      answers: answers,\n    }\n    props.onChange(newSelf)\n  }\n\n\n  if (!question.answers || !question.answers[id]) {\n    return null;\n  }\n\n  return (\n\n    <div className=\"answers\">\n      <br/>\n      <input className=\"answerInput\" type=\"text\" name=\"Answers\" id={id} value={question.answers[id].answer} onChange={event => updatePartialAnswer(id, event)} />\n      <input className=\"cbes\" type=\"checkbox\" name=\"Answers\" id={\"checkbox\"+id} checked={question.answers[id].correct_answer} onChange={event => updatePartialAnswerBoolean(id, event)} />\n      <br/>\n    </div>\n  )\n\n}\n","import React, { useState } from 'react';\nimport Answer from './Answer';\nimport \"../CreateAndEditCSS/Questions.css\";\nimport { FormControl, FormLabel, RadioGroup, FormControlLabel, Radio } from '@material-ui/core';\n\nconst mergeDefaultAnswers = function (answers) {\n  const defaultAnswer = [\n    { answer: '', correct_answer: false },\n    { answer: '', correct_answer: false },\n    { answer: '', correct_answer: false },\n    { answer: '', correct_answer: false },\n    { answer: '', correct_answer: false }\n  ]\n  answers.forEach((answer, index) => {\n    defaultAnswer[index] = {...answer}\n  })\n  return defaultAnswer;\n}\n\nexport default function Question(props) {\n  const { id, index, question } = props;\n  const existingAnswers = mergeDefaultAnswers(question.answers)\n  const [answers, setAnswers] = useState(existingAnswers);\n  \n  question.answers = answers;\n  let display = answers.map((answer, index) => {\n    if (index < 5) {\n      return <Answer\n        key={index}\n        id={index}\n        question={question}\n        onChange={props.onChange}\n      />\n    }\n  })\n\n  //when called, updates question based on property being changed\n  const updatePartialQuestion = function(partName, event) {\n    const newSelf = {\n      ...question,\n      [partName]: event.target.value\n    }\n    props.onChange(newSelf)\n  }\n\n  const updatePartialQuestionPoints = function(partName, event) {\n    const newSelf = {\n      ...question,\n      [partName]: Number(event.target.value)\n    }\n    props.onChange(newSelf)\n  }\n\n\n  \n  return (\n    <div className=\"questions\">\n        \n    <label>Question</label>\n    <br/>\n    <br/>\n    <textarea className=\"questionTextArea\" type=\"text\" placeholder=\"Type Here...\" name=\"Question\" id={id} value={question.question} onChange={event => updatePartialQuestion('question', event)}/>\n  <div className=\"ImagePointsAndSeconds\">\n    <div className=\"ImageAndSeconds\">\n      <label className=\"URL\" for=\"picture\">Image</label>\n      <input className=\"image\" type=\"text\" placeholder=\"URL\"id=\"picture\" name=\"picture\" value={question.image} onChange={event => updatePartialQuestion('image', event)} />\n      <label className=\"seconds\" for=\"seconds\">Seconds to solve</label>\n      <input className=\"secondsNumber\" type=\"text\" name=\"seconds\" value={question.time_per_question} onChange={event => updatePartialQuestion('time_per_question', event)}/>\n    </div>\n    <div className=\"points\">\n      <FormControl component=\"fieldset\">\n      <FormLabel id=\"title\" component=\"legend\">Points Awarded</FormLabel>\n      <RadioGroup aria-label=\"difficulty\" name=\"difficulty1\" value={(question.points_per_question).toString()} onChange={event => updatePartialQuestionPoints('points_per_question', event)}>\n        <FormControlLabel value=\"125\" control={<Radio />} label=\"125\" />\n        <FormControlLabel value=\"250\" control={<Radio />} label=\"250\" />\n        <FormControlLabel value=\"500\" control={<Radio />} label=\"500\" />\n      </RadioGroup>\n      </FormControl>\n    </div>\n  </div>\n  <label for=\"Answers\">Answers</label>\n    {display}\n  <button className=\"button-delete\" type=\"button\" onClick={ props.onDelete }>Delete Question</button>\n</div>\n  \n  )\n}","import React, { useState, useEffect, useContext } from 'react';\nimport Question from './Question';\nimport createContext from '../createContext';\nimport \"../Create/Create.css\";\nimport { FormControl, FormLabel, RadioGroup, FormControlLabel, Radio } from '@material-ui/core';\nimport \"../back_button.css\";\n\nconst categories = ['Arts', 'General', 'Math', 'Science', 'Software']\n\nexport default function Edit(props){\n  const context = useContext(createContext);\n  useEffect(() => {\n    console.log(\"context inside \", context.title[0]);\n  }, [])\n  const [state, setState] = useState(categories);\n  const [stateCategory, setStateCategory] = useState({value: context.title[0].category_name});\n  const [difficulty, setDifficulty] = useState({value: (context.title[0].difficulty).toString()});\n  const [gameTitle, setGameTitle] = useState({value: context.title[0].quiz_name});\n  const [questions, setQuestions] = useState(context.quiz.QA);\n  const [count, setCount] = useState(questions.length);\n  useEffect(() => {\n    console.log(\"1\", questions);\n    console.log(\"2\", gameTitle);\n    console.log(\"3\", typeof difficulty.value);\n    console.log(\"4\", stateCategory);\n    console.log(\"5\", count)\n  })\n  const addQuestion = function() {\n    setCount(count+1);\n    setQuestions([...questions, {\n      id: count,\n      question: '',\n      image: '',\n      points_per_question: 125,\n      time_per_question: 20,\n      answers: [\n        { answer: '', correct_answer: false },\n        { answer: '', correct_answer: false },\n        { answer: '', correct_answer: false },\n        { answer: '', correct_answer: false },\n        { answer: '', correct_answer: false }\n      ],\n    }])  \n  };\n  const deleteQuestion = function(index) {\n    let temp=[];\n    let current = 0;\n    questions.map((question)=>{\n      if((current) !== index){\n        temp.push(question);\n      }\n      current++;\n    })\n    setQuestions(temp);\n  };\n\n  const updateQuestion = function(index, newQuestion) {\n   let clonedQuestions = [...questions];\n    clonedQuestions[index] = newQuestion;\n    setQuestions(clonedQuestions);\n  };\n\n  const handleChangeCategory = (event) => {\n    setStateCategory({value: event.target.value});\n  };\n\n  const handleChangeDifficulty = (event) => {\n    setDifficulty({value: event.target.value});\n  };\n  const updateGameTitle = (event)=>{\n    setGameTitle({value: event.target.value});\n  };\n    let display = questions.map((question, index) => {\n        return <Question \n          key={question.id}\n          id={question.id}\n          question={question}\n          index={index}\n          onDelete={() => {\n            deleteQuestion(index)\n          }}\n          onChange={newQuestion => {\n            updateQuestion(index, newQuestion)\n          }}\n        />\n    })\n\n  \n\n  return (\n    <div>\n    <form>\n    <div className=\"initialQuizInfo\">\n        <div className=\"QuizTitle\">\n          <label id=\"title\">Quiz Title</label>\n          <textarea className=\"titleTextArea\" name=\"QuizTitle\" placeholder=\"Quiz Title\" value={gameTitle.value} onChange={updateGameTitle} />\n          \n        </div>\n        <div class=\"categoryAndDifficulty\">\n          <FormControl component=\"fieldset\">\n            <FormLabel id=\"title\" component=\"legend\">Category</FormLabel>\n            <RadioGroup aria-label=\"category\" name=\"categroy1\" value={stateCategory.value} onChange={handleChangeCategory}>\n            { categories.map(category => {\n              return ( \n                <FormControlLabel value={category} control={<Radio />} key={category} label={category} />\n              )\n            })}\n            </RadioGroup>\n          </FormControl>\n          <FormControl component=\"fieldset\">\n            <FormLabel id=\"title\" component=\"legend\">Difficulty</FormLabel>\n            <RadioGroup aria-label=\"difficulty\" name=\"difficulty1\" value={difficulty.value} onChange={handleChangeDifficulty}>\n              <FormControlLabel value=\"1\" control={<Radio />} label=\"1\" />\n              <FormControlLabel value=\"2\" control={<Radio />} label=\"2\" />\n              <FormControlLabel value=\"3\" control={<Radio />} label=\"3\" />\n              <FormControlLabel value=\"4\" control={<Radio />} label=\"4\" />\n              <FormControlLabel value=\"5\" control={<Radio />} label=\"5\" />\n            </RadioGroup>\n          </FormControl>\n        </div>\n      </div>\n      <div className=\"questionalignment\">\n        {display}\n      </div>\n      <button className=\"button\" type=\"button\" onClick={addQuestion}>Add Question</button>\n      <br/>\n      <button\n      className=\"button\"\n      type=\"button\"\n        onClick={()=>{context.editQuiz(gameTitle.value, stateCategory.value, questions, questions.length, parseInt(difficulty.value), context.quiz.id, context.username)}}>\n          Save/Post Quiz       \n      </button>\n      <button type=\"button\" className=\"backButton\" onClick={()=>{\n        context.setClicked(false);\n        context.loadProfilePage(context.user);\n      }}>\n        Back\n      </button>\n   </form>\n   </div>\n  )\n}\n\n","import React,{useContext, useEffect, useState} from \"react\";\nimport createContext from \"./createContext\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory\n} from \"react-router-dom\";\n\nexport default function JoinLobby(props){\n\n  const [val, setVal] = useState();\n  const context = useContext(createContext);\n  const updateTag = (event)=>{\n    setVal(event.target.value);\n  }\n\n  //back button functionality\n  let history = useHistory();\n  function handleClick() {\n    context.cancelCodeInput();\n  }\n\n  const buttonConditional = () => {\n    if(context.isHost){ \n      return <button type = \"button\" onClick={()=>{\n        context.cancelGame(context.currentgame)}}>\n        Cancel\n      </button>\n    } else {\n      return <button type='button' onClick={() => {handleClick()}}>\n          Back\n      </button>\n    }\n  }\n  \n \n  return (\n  <div>\n    <form>\n      <input type=\"text\" placeholder=\"Enter your display name here...\" onChange={updateTag}/>\n      <button type = \"button\" onClick={()=>{\n        context.enterRoom(val, context.currentgame);\n      }}>\n        Enter\n      </button>\n    </form>\n    {buttonConditional()}\n </div>\n )\n\n\n\n}","import React, { useEffect, useContext} from 'react';\nimport createContext from '../createContext';\nimport \"../back_button.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory\n} from \"react-router-dom\";\n\n\nexport default function GamesList(props) {\n  const context = useContext(createContext);\n  useEffect(()=>{\n    context.setIsHost(false);\n  },[]);\n  let quizzes = props.quizzes;\n  const updateGC = ((event) => { \n    context.setGameCode(event.target.value);\n  })\n\n  //back button functionality\n  let history = useHistory();\n  function handleClick() {\n    context.setGameCode(null);\n    history.push(\"/\");\n  }\n\n  return (\n    <section>\n      <div>\n        <h4>Join page</h4>\n        <button type='button' className=\"backButton\" onClick={handleClick}>\n        </button>\n        <form>\n          <input type=\"text\" placeholder=\"Enter game code to join...\" onChange={updateGC}/>\n          <button type=\"button\" onClick={()=>{\n            context.joinButton(context.gameCode);\n          }}>\n            Join\n          </button>\n        </form>\n      </div>\n    </section>\n  );\n}","import React, { useContext } from 'react';\nimport createContext from \"../createContext\";\n\n\nexport default function Game(props) {\n\n  const context = useContext(createContext);\n\n    return  <div>\n              <button\n                type=\"button\"  \n                onClick={()=>{\n                  context.bar(props.id);\n                }}>\n                <h2>{props.quizName}</h2>\n                <h3>Category: {props.category}</h3>\n                <h4>Number of Questions: {props.numOfQ}</h4>\n                <h4>Number of Times Hosted: {props.numOfTimesHosted} /  Total Players Played: {props.totalPlayersPlayed}</h4>\n                <h4>Difficulty: {props.difficulty}</h4>\n              </button>\n            </div>\n              \n    \n};\n","import React, { useContext } from 'react';\nimport createContext from '../createContext';\nimport UserQuizzes from './UserQuizzes'\nimport {\n  BrowserRouter as Router,\n  useHistory\n} from \"react-router-dom\";\n\n\nexport default function ManageAccount(props) {\n\n  const context = useContext(createContext);\n\n  //back button functionality\n  let history = useHistory();\n  function handleClick() {\n    history.push(\"/\");\n  }\n  \n  \n\n  const userQuizzes = context.userQuizzes.map((quiz, index) => {\n      return <UserQuizzes\n              key={quiz.id}\n              id={quiz.id}\n              quizName={quiz.quiz_name}\n              numOfQ={quiz.num_of_questions}\n              difficulty={quiz.difficulty}\n              numOfTimesHosted={quiz.num_of_times_hosted}\n              totalPlayersPlayed={quiz.total_players_played}\n              category={quiz.category_name}  \n              />\n    })\n\n  return (\n    <section>\n      <h1>Hey</h1>\n      <button type = \"button\" onClick={()=>{\n        handleClick()\n      }}>Back</button>\n      {userQuizzes}\n    </section>\n  )\n}","import React, { useContext } from 'react';\n\nexport default function ErrorLogIn(props) {\n\n  \n  return (\n    <section>\n      Please login\n    </section>\n  )\n}","import {createContext} from 'react';\n\nexport default createContext();","import React, { useContext, useEffect } from 'react';\nimport createContext from '../createContext';\nimport Login from \"../Login\"\nimport {\n  BrowserRouter as Router,\n  useHistory\n} from \"react-router-dom\";\n\n\nexport default function Profile (props){\n\n  //back button functionality\n  let history = useHistory();\n  function handleClick() {\n    history.push(\"/\");\n  }\n\n  return (\n    <section>\n      <h4>Profile Page</h4>\n      <button type = \"button\" onClick={()=>{\n        handleClick()\n      }}>Back</button>\n      <Login/>\n    </section>\n  )\n}","import React, { useContext } from 'react';\nimport createContext from '../createContext';\nimport \"../back_button.css\"\nimport \"./Landingpage.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\n\n//Material UI\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  }\n}));\n\nexport default function LandingPage() {\n  const context = useContext(createContext);\n  const classes = useStyles(); //<-- allows for style changes\n\n\n  return (\n\n      <div className=\"buttons\">\n            <Link to=\"/create\" className=\"links\">\n              <Button variant=\"contained\" class=\"sizing-button first\">\n                Create\n              </Button>\n            </Link>\n\n            <Link to=\"/host\" className=\"links\">\n              <Button variant=\"contained\" class=\"sizing-button first\">\n\n                Host\n              </Button>\n            </Link>\n\n            <Link to=\"/join\" className=\"links\">\n              <Button variant=\"contained\" class=\"sizing-button first\">\n\n                Join\n              </Button>\n            </Link>\n      </div>\n\n  )\n}","import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nimport Gameroom from \"./components/Gameroom/Gameroom\";\nimport Login from \"./components/Login\"\nimport GamesList from \"./components/host_games_list/GamesList\";\nimport PlayerLobby from \"./components/player_lobby/PlayerLobby\";\nimport Create from \"./components/Create/Create\";\nimport Edit from \"./components/Edit/Edit\";\nimport JoinLobby from './components/JoinLobby';\nimport Join from './components/join_games_list/Join';\nimport ManageAccount from './components/ManageAccount/ManageAccount';\nimport ErrorLogIn from './components/Error/ErrorLogIn';\nimport createdContext from \"./components/Create/createdContext\";\nimport UserContext from \"./components/Gameroom/UserContext\";\nimport createContext from \"./components/createContext\";\nimport Profile from \"./components/Profile/Profile\";\nimport LandingPage from './components/landing_page/LandingPage'; //<-- new\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\n//material-ui\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: 'none',\n      // color: 'white'\n    },\n  },\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up('sm')]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n    navPosition: {\n      position: 'fixed'\n    }\n}));\n\n\n\nexport default function App(props) {\n  const socket = props.socket;\n  const [initilized, setInitialized] = useState(false);\n  const [gameCode, setGameCode] = useState();\n  const [lplayers, setLplayers] = useState({});\n  const [user, setUser] = useState();\n  const [gamerTag, setGamerTag] = useState();\n  const [start, setStart] = useState(0);\n  const [players, setPlayers] = useState();\n  const [questions, setQuestions] = useState();\n  const [gameDis, setGameDis] = useState();\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const [answered, setAnswered] = useState(false);\n  const [whichAns, setWhichAns] = useState();\n  const [sign, setSign] = useState(false);\n  const [quizlist, setQuizlist] = useState({});\n  const [category, setCategory] = useState({});\n  const [initilizedQuiz, setInitializedQuiz] = useState(false);\n  const [currentgame, setCurrentgame] = useState();\n  const [joinView, setJoinView] = useState(false);\n  const [lobbyFlag, setLobbyFlag] = useState(false);\n  const [isHost, setIsHost] = useState(false);\n  const [loadGame, setLoadGame] = useState(false);\n\n  const [loadManageAccount, setLoadManageAccount] = useState(false);\n\n  const [displayCode, setDisplayCode] = useState('');\n  \n  const [quiz, setQuiz] = useState();\n  const [title, setTitle] = useState();\n  const [clicked, setClicked] = useState(false);\n  const [userQuizzes, setUserQuizzes] = useState();\n  const [refresh, setRefresh] = useState(0);\n\n  //Material-UI\n  const classes = useStyles();\n  \n  const createQuiz = (gameTitle, category, questions, numOfQuestions, difficulty, username)=>{\n    socket.emit('createdQuiz', {gameTitle, category, questions, numOfQuestions, difficulty, username});\n  }\n\n  const loadProfilePage = (user) => {\n    socket.emit('requestUserCreatedQuizzes', user);\n    socket.on('receivedUserCreatedQuizzes', (data=>{\n      setUserQuizzes(data);\n      setLoadManageAccount(true);\n    }));\n  };\n\n\n\n\n  const editQuiz = (gameTitle, category, questions, numOfQuestions, difficulty, oldQuizId, username)=>{\n    socket.emit('editedQuiz', {gameTitle, category, questions, numOfQuestions, difficulty, oldQuizId, username});\n    setClicked(false);\n    loadProfilePage(user);\n  }\n  \n\n  const bar = (quizid) => {\n    socket.emit('quizToEdit', quizid);\n    socket.once('editThisQuiz', (QAndAs => {\n      setQuiz(QAndAs);\n      setClicked(true);\n    }))\n    socket.once('editThisQuizTitle', (res => {\n      setTitle(res);\n    }))\n    \n  }\n\n  const clickfunc = () => {\n    bar();\n  }\n  \n  \n\n  socket.once('playersCurrentRanking', (ranking=>{\n    setPlayers(ranking);\n  }));\n  socket.once('refreshHost', (flag)=>{\n    setInitializedQuiz(false);\n    setRefresh(flag);\n  })\n  socket.on('waitStart', (start)=>{\n    if(lobbyFlag && start === currentgame){\n      setStart(1);\n    }else if(start === currentgame){\n\n    }\n  })\n\n  socket.once('gameslist', (data=>{\n    setQuizlist(data);\n    setInitializedQuiz(true);\n  }));\n\n  socket.on('playersInLobby', (p)=>{\n    if(p.game === currentgame && gamerTag){\n      setLobbyFlag((x)=>{\n        setLplayers(p.players);\n        return true;\n      });\n    }\n  });\n  \n  useEffect(()=>{    \n    setGameDis(<Gameroom\n      key={currentgame}\n      players={players}\n      questions ={questions}\n      />);\n  },[players, questions]);\n\n  const sendAns=(gamer, score)=>{\n    socket.emit(\"updateScore\", {gamer, score, currentgame});\n  }\n\n  const verifyLogin = (username, password)=>{\n    socket.emit('userL', {username, password});\n    socket.once(\"loggedUser\", (logged)=>{\n      if(logged){\n        setUser(logged);\n      }else{\n        alert(\"Wrong username and password!\");\n      }\n    })\n  }\n  const logout = ()=>{\n    if(user){\n      setUser(null);\n    }\n  }\n  const register = (u, p)=>{\n    socket.emit(\"register\", {username: u, password: p});\n    socket.once(\"reggedUser\", (logged)=>{\n      if(logged){\n        setUser(logged);\n      } else{\n        alert(\"The username already taken\");\n      }\n    })\n  }\n  const fetchAndSetQuestions = (id)=>{\n    socket.emit('gameID', id);\n    socket.on('GameroomQ', (qa)=>{\n      setQuestions(qa);\n    });\n  }\n    \n  const gamecodeGen = ()=>{\n    let result = '';\n    const alph = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for(let i = 0; i < 8; i++){\n      result += alph.charAt(Math.floor(Math.random() * alph.length));\n    }\n    return result;\n  }\n\n  const createGame = async (quiz_id)=>{ // ---\n    let gamecode = gamecodeGen();\n    let is_active = true;\n    setDisplayCode(gamecode);\n    socket.emit('hostableGame', {quiz_id, gamecode, is_active});\n    socket.on('hostedGame', (current_game)=>{\n      setCurrentgame(current_game);\n      setJoinView(true);\n    })\n  };\n  const enterRoom = (displayName, gameid)=>{\n    socket.emit('playerJoin', {gamertag: displayName, game_id: gameid,\n    is_host: isHost});\n    setGamerTag(displayName);\n    fetchAndSetQuestions(gameid);\n  }\n\n  //cancel selected game & delete game code from db\n  const cancelGame = (gameid)=>{\n    socket.emit('cancelGame', gameid);\n    setJoinView(false);\n    setCurrentgame(null);\n    socket.on('confirmMessage', (message) => {\n    })\n  }\n\n  const joinButton = (gameC)=>{\n    setDisplayCode(gameC);\n    socket.emit(\"joinGame\", gameC);\n    socket.on('joinedGame',(gamid)=>{\n      setCurrentgame(gamid);\n      setJoinView(true);\n    })\n  }\n\n  //goes back to join after you have entered code\n  const cancelCodeInput = () => {\n    setGameCode(null);\n    setJoinView(false);\n  };\n  \n  const startGame = ()=>{\n    socket.emit(\"startgame\", currentgame);\n  }\n  \n\n\n  // ----- Host Page for Games List -----//\n  useEffect(()=>{\n    socket.emit('hostGames', '1');\n  },[userQuizzes, refresh]);\n    \n\n\n  const displayUser = () => {\n    return (!user ? ( <div>\n      <Button color=\"inherit\" onClick={() => {} }>\n         <Link to=\"/profile\" style={{ textDecoration: 'none' }}>Log In/Sign Up</Link>\n      </Button>\n    </div>) \n    : \n    (<div>\n      {user.username}\n      <button onClick = {logout}>\n        Logout     \n      </button>\n    </div>)\n    )\n  }\n\n  const managingAccount = () => {\n    if (user) {\n      return (\n      <Link to=\"/manageaccount\" style={{ textDecoration: 'none' }}>\n        <Button onClick={(() => loadProfilePage(user))}>Manage Account</Button>\n      </Link>)\n    }\n  }\n\n  const navBar = () => {\n    if (joinView && lobbyFlag) {\n\n      return (<nav className=\"nav-style\">\n                <div className=\"App-nav\">\n\n                <Typography variant=\"h6\">\n                    RE-SOLVE\n                </Typography>\n                  <div className=\"App-nav App-login-buttons\">\n                    {!user ? ('') : (<Typography variant=\"h6\">{user.username}</Typography>)}\n                  </div>\n                </div>\n              </nav>)\n    } else {\n      return (<nav className=\"nav-style\">\n                <div className=\"App-nav\">\n                    <Link to=\"/\" style={{ textDecoration: 'none' }} className=\"link-color\">\n                      <Typography variant=\"h5\" className=\"typo-style typo-font\">RE-SOLVE</Typography>\n                    </Link>\n                  <div className=\"App-nav App-login-buttons\">\n                    {managingAccount()}\n                    {displayUser()}\n                  </div>\n                </div>\n              </nav>)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <meta\n          name=\"viewport\"\n          content=\"minimum-scale=1, initial-scale=1, width=device-width\"\n        />\n      <Router>\n        {navBar()}\n\n        <header className=\"App-header\">\n        {/* <body> */}\n          <Switch>\n            {<Route path=\"/manageaccount\">\n              <createContext.Provider value = {{setUserQuizzes, userQuizzes, editQuiz, quiz, setQuiz, title, \n                setTitle, clickfunc, bar, username, user, loadProfilePage, setClicked}}>\n                {(user && clicked) ? <Edit /> : ((user && loadManageAccount) ? <ManageAccount/> : <ErrorLogIn/>)}\n              </createContext.Provider>\n            </Route>}\n\n            <Route exact path=\"/\">\n              <createContext.Provider>\n              <LandingPage/>\n              </createContext.Provider>\n            </Route>\n\n            <Route path=\"/profile\">\n              <UserContext.Provider value = {{user, setUser, verifyLogin, \n                username, setUsername, password, setPassword, logout, \n                gamerTag, answered, setAnswered, whichAns, setWhichAns, \n                sendAns, setPlayers, register, currentgame, setCurrentgame}}>\n                <Profile/>\n              </UserContext.Provider>\n            </Route>\n\n\n            <Route path=\"/create\">\n              <createContext.Provider value = {{createQuiz, user}}>\n                <Create/>\n              </createContext.Provider>\n            </Route>\n\n            <Route path=\"/host\">\n              <createContext.Provider value={{createGame, enterRoom, isHost, setIsHost, cancelGame, \n              currentgame, gamerTag, setGamerTag, startGame, displayCode, quizlist\n              }}>\n              <UserContext.Provider value = {{user, setUser, verifyLogin, \n                username, setUsername, password, setPassword, logout, \n                gamerTag, answered, setAnswered, whichAns, setWhichAns, \n                sendAns, setPlayers, register, currentgame, setCurrentgame, \n                isHost, setIsHost, enterRoom, setJoinView, setLobbyFlag, setStart}}>\n                  {(start) ? gameDis : ((lobbyFlag && joinView) ? (<PlayerLobby players={lplayers}/>) :( (joinView && !lobbyFlag) ? <JoinLobby/> : (initilizedQuiz ? <GamesList/> : \"\")))}\n              </UserContext.Provider>\n              </createContext.Provider>\n            </Route>\n\n            <Route path=\"/join\">\n              <createContext.Provider value={{createGame, enterRoom, isHost, setIsHost, cancelGame, currentgame, gamerTag, setGamerTag, joinButton, gameCode, setGameCode, startGame, cancelCodeInput, displayCode\n              }}>\n                <UserContext.Provider value = {{user, setUser, verifyLogin, \n                  username, setUsername, password, setPassword, logout, \n                  gamerTag, answered, setAnswered, whichAns, setWhichAns, \n                  sendAns, setPlayers, register, currentgame, setCurrentgame, \n                  isHost, setIsHost, enterRoom, setJoinView, setLobbyFlag, setStart}}>\n                {(start) ? gameDis : ((lobbyFlag && joinView) ? (<PlayerLobby players={lplayers}/>) :( (joinView && !lobbyFlag) ? <JoinLobby/> : <Join/>))}\n                </UserContext.Provider>\n              </createContext.Provider> \n            </Route>  \n\n          </Switch>\n        </header>\n      </Router>\n    </div>\n\n\n  )\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport io from 'socket.io-client';\n\nconst socket = io('https://re-solve.herokuapp.com/');\n\nReactDOM.render(\n  \n    <App socket={socket}/>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}